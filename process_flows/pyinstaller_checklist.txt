
Checklist for running pyinstaller for klusterbox

Update version and docs. Git push.

w64
___  1. in the source code - klusterbox.py, change the variable for version and release date to reflect the current version number and release date. This is around line 35 under the comment "version variables". 

___  2. navigate to the klusterbox project folder and open readme.txt.
___  	a. update the "most recent version" and "released" near the top of the page. 
___  	b. make any other changes to the readme.txt file that might be relevant.
___  	c. save the changes.

___  3. navigate to and open history.txt 
___  	a. update the history, add changes made for the lastest version. 
___  	b. save the changes. 

4. upload the most recent version to git hub
___  	a. open windows powershell
___  	b. navigate to the project folder
___  	c. type: git add .
___  	d. type: git commit -m "your comments"
___  	e. type: git push origin <branch>

(optional) merge any branches that need to be merged with the following commands:
___  	1. type: git remote <branch> eg git remote update
___  	2. type: git merge <branch> eg git merge origin/mac
___  	3. open docs where there is a conflict and resolve.
___  	4. save resolved docs.
___  	5. use add/commit/push to push resolved version to git master branch.

(optional)
 to delete the branch 
___  	6. go to computer with the non-master branch
___  `	7. type git checkout master
___  	8. type: git branch -D <branch>
___  	9. type: git push origin --delete <branch>
___  	10. type: git pull -p or git pull --prune to pull the most recent master branch to the hard drive.

----------------------------------------------------------------------

if the klusterbox project folder is not installed on your hard drive.

w32 mac
___ ___  1. Install git on your computer if it is not already installed. 

___ ___  2. Open powershell/terminal if not already opened and navigate to where you want the project folder to be placed. 

___ ___  3. Go to github.com, click the "code" button, find the url in the clone section and copy that to clipboard.

___ ___  4. In powershell/terminal type: git clone <github repo url>.

----------------------------------------------------------------------

use these alternate commands in git if the klusterbox project folder is already on the hard drive but is not current with the git repo. 

w32 mac
___ ___  1. open windows power shell or terminal.

___ ___  2. navigate to the klusterbox project folder.

___ ___  3. use type: git pull -p or git pull --prune to pull the most recent master branch to the hard drive. 

----------------------------------------------------------------------

Set up folders with updated/necessary files

w64 w32 mac 
___ ___ ___  5. make sure the kb_install folder is inside the klusterbox 
project folder. If not, then create it. If it does exist, empty any contents except kb_sub.

 6. copy and paste the most resent versions of source files into the kb_install folder.
		
		w64 w32 mac
		___ ___ ___  1. klusterbox.py
		___ ___ ___  2. projvar.py
		___ ___ ___  3. kbtoolbox.py
		___ ___ ___  4. kbdatabase.py
		___ ___ ___  5. kbreports.py
		___ ___ ___  6. kbspreadsheets.py
		___ ___ ___  7. kbspeedsheets.py

___ ___ ___  7. copy and paste the kb_sub folder into the kb_install folder.	
	
	a. make sure the following files/folders are not present in the kb_install/kb_sub folder. Delete them if they are present. kb_sub/images should be the only folder present: 

		w64 w32 mac
		___ ___ ___  1. /kb_sub/mandates.sqlite
		___ ___ ___  2. /kb_sub/ee_reader
		___ ___ ___  3. /kb_sub/infc_grv
		___ ___ ___  4. /kb_sub/over_max
		___ ___ ___  5. /kb_sub/over_max_spreadsheet
		___ ___ ___  6. /kb_sub/pp_guide
		___ ___ ___  7. /kb_sub/spreadsheets
		___ ___ ___  8. /kb_sub/weekly_availability
		
	b. only the following files should be in the kb_sub/kb_images folder. make sure the kb_images folder is present and contains the following files:
		___ ___ ___  1. kb_about.jpg
		___ ___ ___  2. kb_icon1.icns
		___ ___ ___  3. kb_icon2.gif
		___ ___ ___  4. kb_icon2.ico
		___ ___ ___  5. kb_icon2.jpg
		___ ___ ___  6. kb_icon2.xpm (optional)
		___ ___ ___  7. .DS_Store (ignore this in mac. delete in windows)

	c. copy and paste the following files from the klusterbox project folder and paste them into the kb_install/kb_sub folder 
		___ ___  1. license.txt
		___ ___  2. readme.txt
		___ ___  3. history.txt
		___ ___  4. klusterbox.py (source code)
		___ ___  5. speedsheet_instructions.txt
		___ ___  6. cheatsheet.txt
		___ ___  7. projvar.py
		___ ___  8. kbtoolbox.py
		___ ___  9. kbdatabase.py
		___ ___  10. kbreports.py
		___ ___  11. kbspreadsheets.py
		___ ___  12. kbspeedsheets.py
		___ ___  13. requirements.txt (list of necessary libraries for running klusterbox.py)

___ ___ ___  8. make sure the klusterwin.spec or klustermac.spec files are included in the kb_install folder if you are going to run pyinstaller using those spec files.
		
___ ___ ___  9. in terminal/ powershell, navigate to the klusterbox folder.

___ ___ ___  10. verify that the virtual environment is installed by entering "pipenv shell" or "python -m pipenv shell". if the virtual environment is not installed, create it.
 
	w64 w32 mac
	___ ___ ___  a. delete Pipfile if it exist in the directory
	___ ___ ___  b. delete Pipfile.lock if it exist in the directory
	___ ___ ___  c. enter: "pip3 install pipenv" or "pip install --user pipenv"
	___ ___ ___  d. start virtual environment with "pipenv shell"

___ ___ ___  12. check the installed modules by entering: pip list

___ ___ ___  13. if the listed modules do not match those in the requirements list then install them. 
	___ ___ ___  a. ensure the requirements file from the klusterbox project folder is present.
	___ ___ ___  a. enter: pipenv install -r requirements.txt

14. make sure that pyinstaller is installed inside the virtual environment (pyinstaller should be included in requirements.txt). 
	___ ___ ___  a type: pyinstaller --version
	___ ___ ___  b. if pyinstaller is not installed use:
		type: pip install pyinstaller 
		or type pip3 install pyinstaller. 

15. navigate to the kb_install folder

----------------------------------------------------------------------

Runing Pyinstaller and creating distro for Klusterbox Legacy version for Windows

if you are creating a klusterbox.exe to be used WITHOUT an installer:

w64 w32
___ ___  1. make sure you are in the kb_install folder.

___ ___  2. enter the following in the command line:

if you have a klusterleg.spec file:
	___  a. copy/paste klusterleg.spec into the kb_install folder
	___  b. enter "pyinstaller klusterleg.spec"

else if you do not have a klusterleg.spec file:	
	___  a. enter 
	"pyinstaller -w -F --icon kb_sub/kb_images/kb_icon2.ico klusterbox.py"
	___  b. after pyinstaller runs, you can rename the klusterbox.spec file to klusterleg.spec and move it into the project file for later use. 
	
___ ___  3. in explorer, in the kb_install folder, ensure the following files are in the kb_sub folder. 
	___ ___  1. license.txt
	___ ___  2. readme.txt
	___ ___  3. history.txt
	___ ___  4. klusterbox.py (source code)
	___ ___  5. speedsheet_instructions.txt
	___ ___  6. cheatsheet.txt
	___ ___  7. projvar.py
	___ ___  8. kbtoolbox.py
	___ ___  9. kbdatabase.py
	___ ___  10. kbreports.py
	___ ___  11. kbspreadsheets.py
	___ ___  12. kbspeedsheets.py
	___ ___  13. requirements.txt (list of necessary libraries for running klusterbox.py)

___ ___  4. enter into the dist folder and copy the klusterbox.exe file and paste it into the kb_install folder. 

6. delete the following folders/files from the kb_install folder:
	___ ___  a. build
	___ ___  b. dist
	___ ___  c. klusterbox.spec or klusterwin.spec or klusterleg.spec 
	___ ___  d. klusterbox.py (source code)
	___ ___  e. projvar.py
	___ ___  f. kbtoolbox.py
	___ ___  g. kbdatabase.py
	___ ___  h. kbreports.py
	___ ___  i. kbspreadsheets.py
	___ ___  j. kbspeedsheets.py

___ ___  7. you should have two item in your kb_install folder: the kb_sub folder and the klusterbox.exe file. select both items together and right click. Select Send to > Compressed (zipped) folder.

___ ___  8. select the new zip folder and rename it by right clicking and selecting "Rename". Use the naming convention of 'klusterbox_v...' putting the version number where the ellipse is; e.g. 'klusterbox_v3.003'.  

___ ___  9. The compressed folder is ready for distribution. 

----------------------------------------------------------------------

Running pyinstaller and creating app bundle for Windows.

if you are creating an app bundle to be installed by a NSIS installer for windows: 

w64 w32
___ ___  1. make sure you are in the kb_install folder in powershell.

make sure the following files are in the kb_install folder:

	___ ___  a. klusterbox.py
	___ ___  b. projvar.py
	___ ___  c. kbtoolbox.py
	___ ___  d. kbdatabase.py
	___ ___  e. kbreports.py
	___ ___  f. kbspreadsheets.py
	___ ___  g. kbspeedsheets.py
	___ ___  h. klusterwin.spec

___ ___  2. enter the following in the command line: 

	pyinstaller klusterwin.spec

___ ___  3. wait for pyinstaller to run. When it has finished, you should get a prompt.

___ ___  4. Make sure NSIS and NISedit is installed on your computer. 

___ ___  5. Open NIS edit. 

if you need to create a NSIS script:

	___ ___  1. Run the "nsi_script_wizard_checklist"

if there is a script already exist:

	___ ___  1. Load the kb_nsis_script.nsi file.

	___ ___  2. Change the value of the PRODUCT_VERSION variable to the current version.

	___ ___  3. Save changes and close NS Edit.

___ ___  6. Open the NSIS program.

___ ___  7. Under "Compiler" select "Compile NSI scripts".

___ ___  8. The "Make NSISW" window should appear. Select the "Load Script" icon below the menu bar.  

___ ___  9. navigate to the klusterbox project folder and select the "kb_nsis_script.nsi" file. This should load the script and create the set up file. 

optional: press "Test Installer" to make sure the installer functions properly.

___ ___  10. Close the "Make NSISW" and exit the NSIS program. 

___ ___  11. In explorer, navigate to the klusterbox program file to find the Setup.exe file.

___ ___  12. select the setup_klusterbox.exe and rename it by right clicking and selecting "Rename". Use the naming convention of 'klusterbox_v...' putting the version number where the ellipse is; e.g. 'Setup_klusterbox_v3.003.exe'. 

___ ___  13. This is ready for distribution. 

----------------------------------------------------------------------

Running pyinstaller and making app bundle.

if you are creating a distribution for mac OS. 

mac
___  1. make sure you are in the kb_install folder

___  2. enter the following in the command line: 

	pyinstaller klustermac.spec
  

If making a dmg installer:

	___  1. Run the "create dmg" checklist. 

If creating a zip file for distribution:

	___  1. In Finder, navigate to the /kb_install/dist folder.
		
	___  2. Find the klusterbox app inside and right click on the file. 

	___  3. Select "Compress "klusterbox"" from the menu. 

	___  4. A klusterbox.zip file will appear in the folder.
 
	___  5. select the new zip folder and rename it by right clicking and selecting "Rename". Use the naming convention of 'klusterbox_v...' putting the version number where the ellipse is; e.g. 'klusterbox_v3.003'.  

	___  6. The compressed folder is ready for distribution.


