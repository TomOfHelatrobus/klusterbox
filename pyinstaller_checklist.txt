Checklist for running pyinstaller for klusterbox

1. in the source code - klusterbox.py, change the variable for version and release date to reflect the current version number and release date. This is around line 35 under the comment "version variables". 

2. navigate to the klusterbox project folder and open readme.txt.
	a. update the "most recent version" and "released" near the top of the page. 
	b. make any other changes to the readme.txt file that might be relevant.
	c. save the changes.

3. navigate to and open history.txt 
	a. update the history, add changes made for the lastest version. 
	b. save the changes. 

4. upload the most recent version to git hub
	a. open windows powershell
	b. navigate to the project folder
	c. type: git add .
	d. type: git commit -m "your comments"
	e. type: git push origin <branch>

(optional) merge any branches that need to be merged with the following commands:
	1. type: git remote <branch> eg git remote update
	2. type: git merge <branch> eg git merge origin/mac
	3. open docs where there is a conflict and resolve.
	4. save resolved docs.
	5. use add/commit/push to push resolved version to git master branch.

(optional)
 to delete the branch 
	6. go to computer with the non-master branch
`	7. type git checkout master
	8. type: git branch -D <branch>
	9. type: git push origin --delete <branch>
	10. type: git pull -p or git pull --prune to pull the most recent master branch to the hard drive.

-------------------------------------------------------------------------------------------

if you are running pyinstaller on a computer other than the computer used for development and the most recent version of klusterbox is not on the hard drive follow steps 4 -8, otherwise skip to 9: 

1. if the most recent version of klusterbox is not on the hard drive then go to github.com/TomOfHelatrobus/klusterbox.

2. navigate to the branch which to which up uploaded the most recent version, either master or another.

3. select Code > Download ZIP

4. When the dialog box appears, select "Save File".

5. Open up the browser's Download file.

6. Upzip the zip file

7.  Click on the folder and move into the directory that has the klusterbox. py file inside it. 

8. Open another window. Create or open a directory called klusterbox.

9. Drag and drop or copy/paste the klusterbox.py file from the unzipped folder to the klusterbox folder, over writing the older file, i.e. Move and Replace.

10. Drag and drop or copy/paste the kb_sub file from the unzipped folder to the klusterbox folder, over writing the older file, i.e. Move and Replace.

use these alternate commands in git if the klusterbox project folder is already on the hard drive 

1. open windows power shell or terminal.

2. navigate to the klusterbox project folder.

3. use type: git pull -p or git pull --prune to pull the most recent master branch to the hard drive. 
-------------------------------------------------------------------------------------------
 
5. make sure the kb_install folder is inside the klusterbox 
project folder. If not, then create it. If it does exist, empty any contents.

6. copy and paste the most resent version of klusterbox.py into the kb_install folder.

7. copy and paste the kb_sub folder into the kb_install folder.
	
	a. make sure the following files/folders are not present in the kb_install/kb_sub folder. Delete them if they are present. kb_sub/images should be the only folder present: 
		1. /kb_sub/mandates.sqlite
		2. /kb_sub/ee_reader
		3. /kb_sub/infc_grv
		3. /kb_sub/over_max
		5. /kb_sub/over_max_spreadsheet
		4. /kb_sub/pp_guide
		5. /kb_sub/spreadsheets
		6. /kb_sub/weekly_availability
		
	b. make sure the kb_images folder is present and contains the following files:
		1. kb_about.jpg
		2. kb_icon1.icns
		3. kb_icon2.gif
		4. kb_icon2.ico
		5. kb_icon2.jpg
		6. kb_icon2.xpm 

8. copy and paste the following files from the klusterbox project folder and paste them into the kb_install/kb_sub folder 
	a. license.txt
	b. readme.txt
	c. history.txt
		
9. in terminal/ powershell, navigate to the klusterbox folder.

#. make sure that pyinstaller is installed
	a type: pyinstaller --version
	b. if pyinstaller is not installed use:
		type: pip install pyinstaller 
		or type pip3 install pyinstaller. 

10. verify that the virtual environment is installed by entering "pipenv shell". if the virtual environment is not installed, create it. 
	a. delete Pipfile if it exist in the directory
	b. delete Pipfile.lock if it exist in the directory
	c. enter: pip3 install pipenv or pip install --user pipenv

11. activate the virtual environment by entering: pipenv shell

12. check the installed modules by entering: pip list

13. if the listed modules do not match those in the requirements list then install them. 
	a. copy/paste the requirements folder from the unzipped file.
	a. enter: pipenv install -r requirements.txt

14. navigate to the kb_install folder

15. enter the following in the command line: pyinstaller -w -F --icon kb_sub/kb_images/kb_icon2.ico klusterbox.py
	a. wait while the pyinstaller runs until the process ends. 
		
16. in explorer, in the kb_install folder, drag and drop the klusterbox.py file into the kb_sub folder. 

17. enter into the dist folder and copy the klusterbox.exe file and paste it into the kb_install folder. 

18. delete the following folders/files from the kb_install folder:
	a. build
	b. dist
	c. klusterbox.spec

19. Optional - rename the klusterbox.exe file to show the current version number. e.g. klusterbox_v3.006.exe. 

20. you should have two item in your kb_install folder: the kb_sub folder and the klusterbox.exe file. select both items together and right click. Select Send to > Compressed (zipped) folder.

21. select the new zip folder and rename in by right clicking and selecting rename. Use the nameing convention of 'klusterbox_v...' putting the version number where the ellipse is; e.g. 'klusterbox_v3.003'.  

22. The compressed folder is ready for distribution. 

23. update changes to the directory in git. 
	a. navigate up to the klusterbox project folder
	b. git add . 
	c. git commit -m "I made some changes"
	d. git push origin master or git push origin dev. 

24. start up the 32 bit computer and open a web browser. 

25. navigate to github.com/TomOfHelatrobus and which ever branch you used for the update. 

26. select the "code" pulldown menu and select "download zip"

27. after the download is complete, open the download folder. 
	a. rename the zip file "klusterbox-from-git"
	b. drag and drop or copy and paste the zip file into the klusterbox project folder. 
	c. unzip the klusterbox-from-git zip file and open it in a new window. 
	d. drag and drop or copy/paste the klusterbox.py file from the "klusterbox-from-git" to the klusterbox project file. If prompted select "move and replace"
	e. drag and drop the readme.txt file. 
	f. drag and drop any other changed files. 
	g. delete both "klusterbox-from-git" files - the folder and zip file. 

28. repeat steps 2 through 20 to create the 32 bit version on the 32 bit system. Skip step 5. 
